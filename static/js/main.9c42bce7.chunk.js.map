{"version":3,"sources":["Buttons/PlayPauseButton.js","Buttons/ResetButton.js","Buttons/SettingButton.js","Timer.js","App.js","reportWebVitals.js","index.js"],"names":["PlayPauseButton","this","props","status","react_default","a","createElement","onClick","xmlns","class","fill","viewBox","stroke","stroke-linecap","stroke-linejoin","stroke-width","d","React","Component","ResetButton","SettingButton","initialT","speed","Timer","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handlePlayPause","state","playing","setState","updateDisplay","Math","round","currDur","window","clearTimeout","timeout","setTimeout","handleReset","currVal","initial","seconds","minutes","hours","undefined","console","log","type","value","str","autopad","res","isNaN","parseInt","updateInput","toString","length","padStart","slice","sec","secondsToTime","h","m","s","secs","divisor_for_minutes","divisor_for_seconds","floor","ceil","_this2","es","start","update","timing","duration","_ref","index_esm","strokeWidth","styles","buildStyles","pathTransition","concat","onKeyDown","handleKeyDownH","onBlur","handleOnBlurH","disabled","handleKeyDownM","handleOnBlurM","handleKeyDownS","handleOnBlurS","Buttons_PlayPauseButton","Buttons_ResetButton","Buttons_SettingButton","placeholder","e","updateTime","target","onChange","App","src_Timer","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9c42bce7.chunk.js","sourcesContent":["import React from \"react\"\nclass PlayPauseButton extends React.Component {\n    render() {\n        if (!this.props.status) {\n            return (\n                <button onClick={this.props.onClick}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\" d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\" />\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\" d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                </button>\n            );\n\n        } else {\n            return (\n                <button onClick={this.props.onClick}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\" d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                </button>\n            );\n        }\n    }\n}\nexport default PlayPauseButton\n  ","import React from 'react';\nfunction ResetButton(props) {\n    return (\n        <button {...props}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n            </svg>\n        </button>\n    );\n  }\n  export default ResetButton;","import React from 'react';\nfunction SettingButton(props) {\n    return (\n        <button{...props}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\" d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n            </svg>\n        </button>\n    );\n  }\n  export default SettingButton;","import { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport PlayPauseButton from './Buttons/PlayPauseButton';\nimport './css/custom-timer.css';\nimport ResetButton from './Buttons/ResetButton';\nimport React from 'react';\nimport {Animate} from 'react-move';\nimport SettingButton from './Buttons/SettingButton';\n\nconst initialT =25;\nconst speed = 1000;\nclass Timer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            playing:false,\n            initial: initialT,\n            seconds:'',\n            minutes:'',\n            hours:'',\n        }\n        this.currVal=0;\n        this.currDur=initialT;\n        this.timeout = undefined;\n    }\n    componentDidMount() {\n        console.log(\"did mount\");\n        this.updateDisplay(initialT);\n    }\n    updateTime(type, value) {\n        let str = this.autopad(value);\n        let res = isNaN(parseInt(str)) ? 0: parseInt(str);\n        if (res > 60) {\n            res = 59;\n        } else if (res === 60 || res < 0) {\n            res = 0;\n        }\n        console.log(str);\n        if (type===\"s\") {\n            this.setState({seconds:str})\n            this.updateInput(\"s\", res);\n        } else if (type === \"m\") {\n            this.setState({minutes:str})\n            this.updateInput(\"m\", res);\n        } else {\n            this.setState({hours:str})\n            this.updateInput(\"h\", res);\n        }\n        this.currVal = 0;\n        this.currDur = this.state.initial;\n        window.clearTimeout(this.timeout);\n        this.setState({\n            playing: false,\n        });\n\n        \n    }\n    autopad(str){\n        str =  str.toString();\n        if(str.length < 2) {\n            return str.padStart(2,'0');\n        }\n        return str.slice(-2);\n    }\n    updateDisplay(value) {\n        let sec = this.secondsToTime(value);\n        console.log(this.autopad(sec.h));\n        this.setState({hours:this.autopad(sec.h)});\n        this.setState({minutes:this.autopad(sec.m)});\n        this.setState({seconds:this.autopad(sec.s)});\n    }\n    secondsToTime(secs){\n        let hours = Math.floor(secs / (60 * 60));\n    \n        let divisor_for_minutes = secs % (60 * 60);\n        let minutes = Math.floor(divisor_for_minutes / 60);\n    \n        let divisor_for_seconds = divisor_for_minutes % 60;\n        let seconds = Math.ceil(divisor_for_seconds);\n    \n        let obj = {\n          \"h\": hours,\n          \"m\": minutes,\n          \"s\": seconds\n        };\n        return obj;\n    } \n\n    handlePlayPause = () => {\n        if(!this.state.playing) {\n            \n            this.setState({\n                playing: !this.state.playing\n            })\n            this.timeout = setTimeout(()=> {\n                this.handleReset()\n            },this.currDur*speed)\n        } else {\n            this.setState({\n                playing: !this.state.playing,\n            });\n            this.updateDisplay(Math.round(this.currDur));\n            window.clearTimeout(this.timeout);\n        }\n    }\n\n    handleReset = () => {\n        this.setState({\n            playing: false,\n        });\n        this.currVal = 0;\n        this.currDur = this.state.initial\n        window.clearTimeout(this.timeout);\n        this.updateDisplay(Math.round(this.state.initial));\n    }\n\n    updateInput(type,value) {\n        let s = (this.currDur%60);\n        let m = Math.floor(this.currDur/60)%60;\n        let h = Math.floor(this.currDur/3600)%60;\n        if (type===\"s\") {\n            this.currDur = value + 60*m + 3600*h;\n        } else if (type === \"m\") {\n            this.currDur=s+value*60+3600*h;\n        } else {\n            this.currDur = s + 60*m + 3600*value;\n        }\n        this.setState({initial: this.currDur});\n        this.currDur = this.state.initial;\n        \n    }\n    \n    render() {\n        return (\n            <div class>\n                <Animate\n                start={() => ({\n                    value: this.currVal,\n                    seconds: this.currDur\n                })}\n                update={() => ({\n                    value: [\n                        this.state.playing ? 100 : this.currVal\n                    ],\n                    seconds: [\n                        this.state.playing ? 0: this.currDur\n                    ],\n                    timing: {\n                        duration: [this.state.playing ? this.currDur*speed: 0]\n                    }\n                })}\n                >\n                {({value, seconds}) => {\n                    let sec = this.secondsToTime(Math.round(seconds));\n                    if(!this.state.playing) {\n                        return (\n                            <div class=\"timer\">\n                                <div class=\"parent\">\n                                    <CircularProgressbar value={value} strokeWidth={3} styles={buildStyles({pathTransition:\"none\"})}/>\n                                    <div class=\"child\">\n                                        <label class=\"text\">\n                                            <input class=\"activeInput\" placeholder={this.state.hours} value={this.state.hours}  onKeyDown={e=>{this.updateTime(\"h\",e.target.value)}} onBlur={e=>{this.updateTime(\"h\",e.target.value)}} onChange={e=>{this.updateTime(\"h\",e.target.value)}}/>\n                                            :\n                                            <input class=\"activeInput\" placeholder={this.state.minutes} value={this.state.minutes} onKeyDown={e=>{this.updateTime(\"m\",e.target.value)}} onBlur={e=>this.updateTime(\"m\",e.target.value)} onChange={e=>{this.updateTime(\"m\",e.target.value)}}/>\n                                            :\n                                            <input class=\"activeInput\" placeholder={this.state.seconds} value={this.state.seconds} onKeyDown={e=>{this.updateTime(\"s\",e.target.value)}} onBlur={e=>{this.updateTime(\"s\",e.target.value)}} onChange={e=>{this.updateTime(\"s\",e.target.value)}}/>\n                                        </label>\n                                    </div>\n                                </div> \n                                <div class=\"timer_button\">\n                                    <PlayPauseButton status={this.state.playing} onClick={this.handlePlayPause}/>\n                                    <ResetButton onClick={this.handleReset}/>\n                                    <SettingButton></SettingButton>\n                                </div>\n                            </div>\n                        );\n                    } else {\n                        this.currVal = value;\n                        this.currDur = seconds;\n                        return (\n                            <div class=\"timer\">\n                                <div class=\"parent\">\n                                    <CircularProgressbar value={value}  strokeWidth={3} styles={buildStyles({pathTransition:\"none\"})}/>\n                                    <div class=\"child\">\n                                        <label class=\"text\">\n                                            <input class=\"disabledInput\" value={`${sec.h.toString().padStart(2,'0')}`} onKeyDown={this.handleKeyDownH} onBlur={this.handleOnBlurH} disabled/>\n                                            :\n                                            <input class=\"disabledInput\" value={`${sec.m.toString().padStart(2,'0')}`} onKeyDown={this.handleKeyDownM} onBlur={this.handleOnBlurM} disabled/>\n                                            :\n                                            <input class=\"disabledInput\" value={`${sec.s.toString().padStart(2,'0')}`} onKeyDown={this.handleKeyDownS} onBlur={this.handleOnBlurS}disabled/>\n                                        </label>\n                                    </div>\n                                </div> \n                                <div class=\"timer_button\">\n                                    <PlayPauseButton status={this.state.playing} onClick={this.handlePlayPause}/>\n                                    <ResetButton onClick={this.handleReset}/>\n                                    <SettingButton></SettingButton>\n                                </div>\n                            </div>\n                        );\n\n                    }\n\n                }}\n                </Animate>\n            </div>\n        );\n    }\n}\nexport default Timer;\n","import './css/App.css';\nimport React from 'react';\nimport Timer from './Timer';\nfunction App() {\n  return (\n    <div>\n      <div class=\"top\">\n        <main>\n            <Timer></Timer>\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}